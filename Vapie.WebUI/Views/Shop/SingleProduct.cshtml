@model ShopViewModel
@{
    ViewData["Title"] = "SingleProduct";
}
<div class="page-header breadcrumb-wrap">
    <div class="container">
        <div class="breadcrumb">
            <a class="me-1" asp-action="Index" asp-controller="Home"><i class="fa-solid fa-house me-1"></i>Home</a>
            <a class="me-1" style="color: #FDC040;" asp-action="Index" asp-controller="Shop"><i style="color: #FDC040;" class="fa-solid fa-basket-shopping me-1"></i>Shop</a>
            > @Model.Product.Name
        </div>
    </div>
</div>
<div class="col-12 bg-white py-3 my-3">
    <div class="row">
        <div class="col-lg-5 col-md-12 mb-3">
            <div class="col-12 mb-3">

                <div class="img-large border" style="background-image: url('/uploads/images/@Model.Product.Images.FirstOrDefault(i=>i.IsMain==true).ImagePath')"></div>
            </div>
            <div class="col-12">
                <div class="row">
                    @foreach (var item in Model.Product.Images)
                    {
                        <div class="col-sm-2 col-3">
                            <div class="img-small border" style="background-image: url('/uploads/images/@item.ImagePath')" data-src="/uploads/images/@item.ImagePath"></div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-lg-5 col-md-9">
            <div class="col-12 product-name large">
                @Model.Product.Name
                <small>By <a href="#">@Model.Product.Brand.Name</a></small>
            </div>
            <div class="col-12 px-0">
                <hr>
            </div>
            <div class="col-12">
                <ul>
                    <li>Tüstü sayı: @Model.Product.Capacity puff</li>
                    <li>Tərkibi: @Model.Product.Flavor</li>
                    <li>Nikotin miqdarı: @Model.Product.NicotineStrength</li>
                    <li>Kateqoriyası: @Model.Product.Category.Name</li>
                </ul>
            </div>
        </div>
        <div class="col-lg-2 col-md-3 text-center">
            <div class="col-12 sidebar h-100">
                <div class="row">
                    <div class="col-12">
                        <span class="detail-price">
                            @Model.Product.Price ₼
                        </span>
                    </div>
                    <div class="col-xl-5 col-md-9 col-sm-3 col-5 mx-auto mt-3">
                        <div class="mb-3">
                            <label for="qty">Miqdar</label>
                            <input type="number" id="qty" min="1" value="1" class="form-control" required>
                        </div>
                    </div>
                    <div class="col-12 mt-3">
                        <button class="btn btn-outline-dark" data-item-id="@Model.Product.Id" onclick="addToCart(event)" type="button">
                            <i class="fas fa-cart-plus me-2"></i>Səbətə əlavə et
                        </button>
                    </div>
                    <div class="col-12 mt-3">
                        <button data-item-id="@Model.Product.Id" onclick="addToWishlist(event)" class="btn btn-outline-secondary btn-sm" type="button"><i class="fas fa-heart me-2"></i>Seçilmişlərə əlavə et</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="col-12 mb-3 py-3 bg-white text-justify">
    <div class="row">
        <div class="col-md-7">
            <div class="col-12">
                <div class="row">
                    <div class="col-12 text-uppercase">
                        <h2><u>Detallı</u></h2>
                    </div>
                    <div class="col-12" id="details">
                        @Html.Raw(Model.Product.Description)
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-5">
            <div class="col-12 px-md-4 sidebar h-100">
                <div class="row">
                    <div class="col-12 mt-md-0 mt-3 text-uppercase">
                        <h2><u>Rəylər</u></h2>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12 px-md-3 px-0">
                        <hr>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <h4>Rəy əlavə edin</h4>
                    </div>
                    <div class="col-12">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <form method="post" id="commentForm">
                                <div class="mb-3">
                                    <textarea data-entity-userName="@User.GetPrincipalName()" data-entity-id="@Model.Product.Id" asp-for="@Model.Comment.Comment" class="form-control" placeholder="Fikirlərini bölüş"></textarea>
                                </div>

                                <div class="mb-3">
                                    <button type="submit" class="btn btn-outline-dark">Əlavə et</button>
                                </div>
                            </form>
                        }
                        else
                        {
                            <p>Rəy əlavə etmək üçün Zəhmət olmasa profilə giriş edin!</p>

                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-12 px-md-3 px-0">
                        <hr>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12" id="commentFormComponent">

                        @foreach (var item in Model.Comments)
                        {
                            <div class="col-12 text-justify py-2 px-3 mb-3 bg-gray">
                                <div class="row">
                                    <div class="col-12">
                                        <strong class="me-2">@item.UserName</strong>
                                    </div>
                                    <div class="col-12">
                                        @item.Comment
                                    </div>
                                    <div class="col-12">
                                        @if ((DateTime.UtcNow.AddHours(4) - item.CreatedDate).Hours < 1)
                                        {
                                            if ((DateTime.UtcNow.AddHours(4) - item.CreatedDate).Minutes < 1)
                                            {
                                                <small>
                                                    <i class="fas fa-clock me-2"></i> @((DateTime.UtcNow.AddHours(4) - item.CreatedDate).Seconds) seconds ago
                                                </small>
                                            }
                                            else
                                            {
                                                <small>
                                                    <i class="fas fa-clock me-2"></i> @((DateTime.UtcNow.AddHours(4) - item.CreatedDate).Minutes) minutes ago
                                                </small>
                                            }
                                        }
                                        else if ((DateTime.UtcNow.AddHours(4) - item.CreatedDate).Hours <= 24 && (DateTime.UtcNow.AddHours(4) - item.CreatedDate).Hours >= 1)
                                        {
                                            <small>
                                                <i class="fas fa-clock me-2"></i> @((DateTime.UtcNow.AddHours(4) - item.CreatedDate).Hours) hours ago
                                            </small>
                                        }
                                        else if ((DateTime.UtcNow.AddHours(4) - item.CreatedDate).Hours > 24)
                                        {
                                            <small>
                                                <i class="fas fa-clock me-2"></i> @((DateTime.UtcNow.AddHours(4) - item.CreatedDate).Days) days ago
                                            </small>
                                        }

                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="col-12">
    <div class="row">
        <div class="col-12 py-3">
            <div class="row">
                <div class="col-12 text-center text-uppercase">
                    @if (Model.Products.Count > 0)
                    {
                        <h2>Oxşar Məhsullar</h2>
                    }
                    else
                    {
                        <h2>Oxşar Məhsul yoxdur</h2>
                    }
                </div>
            </div>
            <div class="row">
                @foreach (var item in Model.Products)
                {
                    var imagePath = item.Images.FirstOrDefault(i => i.IsMain == true).ImagePath;
                    <div class="col-lg-3 col-sm-6 my-3">
                        <div class="col-12 bg-white text-center h-100 product-item">
                            <div class="row h-100">
                                <div class="col-12 p-0 mb-3">
                                    <a asp-action="singleproduct" asp-route-id="@item.Id" asp-route-categoryId="@item.CategoryId">
                                        <img src="~/uploads/images/@imagePath" class="img-fluid">
                                    </a>
                                </div>
                                <div class="col-12 mb-3">
                                    <a asp-action="singleproduct" asp-route-id="@item.Id" asp-route-categoryId="@item.CategoryId" class="product-name">@item.Name</a>
                                </div>
                                <div class="col-12 mb-3">
                                    <span class="product-price">
                                        @item.Price ₼
                                    </span>
                                </div>
                                <div class="col-12 mb-3 align-self-end">
                                    <button data-item-id="@item.Id" onclick="addToWishlist(event)" class="btn mb-1 btn-outline-secondary btn-sm" type="button"><i class="fas fa-heart me-2"></i>Seçilmişlərə əlavə et</button>
                                    <button data-item-id="@item.Id" onclick="addToCart(event)" class="btn btn-outline-dark" type="button"><i class="fas fa-cart-plus me-2"></i>Səbətə əlavə et</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section css{
    <link href="~/libs/toastr.js/toastr.css" rel="stylesheet" />
}
@section js{
    <script>
        function showCardCount() {
            let items = readFromBasket();
            $('#header-qty').html(items.length - 1);

        }
        showCardCount();
        function showWishlistCount() {
            let items = readFromCookie();
            $('#header-favorite').html(items.length - 1);

        }
        showWishlistCount();
        function readFromCookie() {
            return ($.cookie('cardsForCookie') || '').split(',');
        }

        function readFromBasket() {
            return ($.cookie('cards') || '').split(',');
        }
        function addToWishlist(ev) {
            ev.preventDefault();
            ev.stopPropagation();
            let data = $(ev.currentTarget).data();
            addToCookie(data.itemId);

            console.log(readFromCookie())
        }
        function addToCookie(cardId) {
            let items = readFromCookie();
            let length = items.filter(item => item == cardId).length;
            if (length > 0) {
                toastr.warning("Bu məhsulu artıq seçilmişlərə əlavə etmisiniz!", "Uğursuz");
                return;
            }
            items.push(cardId);
            $.cookie('cardsForCookie', items.toString(), { expires: 7, path: '/' });
            $.ajax({
                success: function (response) {
                    if (response.error == true) {
                        toastr.error(response.message, "Error!");
                        return;
                    }
                    toastr.success("Successfully Added", response.message)
                    showWishlistCount();
                },
                error: function (response) {
                    toastr["error"]("Unsuccessfully", "Data has not been deleted")
                }
            })
        }
        function addToCart(ev) {
            ev.preventDefault();
            ev.stopPropagation();
            let data = $(ev.currentTarget).data();
            addToBasket(data.itemId);

            console.log(readFromBasket())
        }
        function addToBasket(cardId) {
            let items = readFromBasket();
            let length = items.filter(item => item == cardId).length;
            if (length > 0) {
                toastr.warning("Bu məhsulu artıq səbətə əlavə etmisiniz!", "Uğursuz");
                return;
            }
            items.push(cardId);
            $.cookie('cards', items.toString(), { expires: 7, path: '/' });
            $.ajax({
                success: function (response) {
                    if (response.error == true) {
                        toastr.error(response.message, "Error!");
                        return;
                    }
                    toastr.success("Successfully Added", response.message)
                    showCardCount();
                },
                error: function (response) {
                    toastr["error"]("Unsuccessfully", "Data has not been deleted")
                }
            })
        }

    </script>
    <script src="~/libs/toastr.js/toastr.min.js"></script>
    <script src="~/admin/files/assets/js/customize.js"></script>
    <script>
        $(document).ready(function () {
            $('#commentForm').submit(function (e) {
                e.preventDefault();
                let formData = new FormData(e.currentTarget);
                const data = $(e.currentTarget).find('textarea[data-entity-id]').data();
                let entityId = data.entityId;
                let userName = data.entityuserName;

                const comment = $(e.currentTarget).find('textarea[data-entity-id]').val();
                formData.set(`ProductId`, entityId);
                formData.set(`Comment`, comment);
                formData.set(`UserName`, "@User.GetPrincipalName()");


                var smallTag = $('<small>');
                var divContainer = $('<div>', {
                    class: 'col-12'
                });

                var strongTag = $('<strong>', {
                    class: 'me-2',
                    text: '@User.GetPrincipalName()'
                });
                //var smallTag2 = $('<small>');
                var divContainer1 = $('<div>', {
                    class: 'col-12'
                });
                var divContainer2 = $('<div>', {
                    class: 'col-12',
                    text: comment
                });
                var divContainer3 = $('<div>', {
                    class: 'row'
                });
                var divContainer4 = $('<div>', {
                    class: 'col-12 text-justify py-2 px-3 mb-3 bg-gray'
                });
                var commentComponent = $('#commentFormComponent');

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Comment")",
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.error == true) {
                            toastr.error(response.message, 'Error!');
                            return;
                        }
                        toastr.success(response.message, 'Success!');
                        smallTag.appendTo(divContainer);
                        smallTag.html('<i class="fas fa-clock me-2"></i> just now');
                        strongTag.appendTo(divContainer1);
                        divContainer1.appendTo(divContainer3);
                        divContainer2.appendTo(divContainer3);
                        divContainer.appendTo(divContainer3);
                        divContainer3.appendTo(divContainer4);
                        divContainer4.appendTo(commentComponent);
                        e.currentTarget.reset();
                    }
                });
            });
        });

    </script>
}