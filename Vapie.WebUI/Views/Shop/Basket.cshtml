@model List<Product>
@{
    ViewData["Title"] = "Basket";
}

<div class="page-header breadcrumb-wrap">
    <div class="container">
        <div class="breadcrumb">
            <a class="me-1" asp-action="Index" asp-controller="home"><i class="fa-solid fa-house me-1"></i>Home</a>
            <a class="me-1" style="color: #FDC040;" asp-action="Index" asp-controller="Shop"><i style="color: #FDC040;" class="fa-solid fa-basket-shopping me-1"></i>Shop</a>
            > <i class="fa-solid fa-cart-shopping"></i> Cart
        </div>
    </div>
    <div class="col-12 mt-3 text-center text-uppercase">
        <h2>Shopping Cart</h2>
    </div>
</div>
<div class="col-12 bg-white py-3 mb-3">
    <div class="row">
        <div class="col-lg-6 col-md-8 col-sm-10 mx-auto table-responsive">
            @if (Model.Count == 0)
            {
                <div class="d-flex flex-column justify-content-center align-items-center">
                    <i class="emptyBasket fa-solid fa-cart-shopping"></i>
                    <h1 class="emptyBasketText">Your Cart is empty</h1>
                </div>

            }
            else
            {
                <form class="row">
                    <div class="col-12">
                        <table class="table table-striped table-hover table-sm">
                            <thead>
                                <tr>
                                    <th>Image</th>
                                    <th>Name</th>
                                    <th>Price</th>
                                    <th>Qty</th>
                                    <th>Amount</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    var imagePath = item.Images.FirstOrDefault(i => i.IsMain == true).ImagePath;
                                    <tr id="entityTr" data-entity-id="@item.Id" data-quantity="1" data-price="@item.Price">
                                        <td style="display:flex;justify-content:center;">
                                            <a asp-action="singleproduct" asp-route-id="@item.Id" asp-route-categoryId="@item.CategoryId"><img src="~/uploads/images/@imagePath" class="img-fluid"></a>
                                        </td>
                                        <td>
                                            <a asp-action="singleproduct" asp-route-id="@item.Id" asp-route-categoryId="@item.CategoryId">@item.Name</a>
                                        </td>
                                        <td>
                                            @item.Price ₼
                                        </td>
                                        <td>
                                            <button onclick="minusQuantity(event)" type="button" class="btn btn-danger"><i class="fa-solid fa-minus"></i></button>
                                            <span class="quantity ">1</span>
                                            <button onclick="plusQuantity(event)" type="button" class="btn btn-primary"><i class="fa-solid fa-plus"></i></button>
                                        </td>
                                        <td class="product-price">
                                            <span class="amount">@item.Price ₼</span>
                                        </td>
                                        <td>
                                            <a onclick="removeEntity(@item.Id)" class="btn btn-link text-danger"><i class="fa-solid fa-trash-can"></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th colspan="3" class="text-right">Total</th>
                                    <th id="totalPrice">$4,000</th>
                                    <th></th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    <div class="col-12 text-right">
                        <a class="btn btn-outline-secondary me-3" asp-action="Index"><i class="fa-solid fa-arrow-left-long me-1"></i> Continue Shopping</a>
                        <a href="#" class="btn btn-outline-success">Checkout</a>
                    </div>
                </form>
            }

        </div>
    </div>
</div>
@section js{
    <script>
        function checkCart() {
            let items = readFromBasket();
            var divContainer = $('<div>', {
                class: 'd-flex flex-column justify-content-center align-items-center'
            });
            var iTag = $('<i>', {
                class: 'emptyBasket fa-solid fa-cart-shopping'
            });
            var h1Tag = $('<h1>').text("Your Cart is empty").addClass("emptyBasketText");
            let divTag = $('div.table-responsive');
            if (items.length <= 1) {
                $('form.row').remove();
                iTag.appendTo(divContainer);
                h1Tag.appendTo(divContainer);
                divContainer.appendTo(divTag);
            }
        }
        function setTotalPrice() {
            let items = document.querySelectorAll('.amount');
            let totalPrice = 0;
            for (var i = 0; i < items.length; i++) {
                totalPrice = totalPrice + parseInt(items[i].textContent);
            }
            $('#totalPrice').html(`${totalPrice}₼`);
            console.log(totalPrice);
        }
        setTotalPrice();
        function showCardCount() {
            let items = readFromBasket();
            $('#header-qty').html(items.length - 1);
        }
        function readFromBasket() {
            return ($.cookie('cards') || '').split(',');
        }
        function removeEntity(entityId) {
            let items = readFromBasket();
            let id = entityId.toString();
            const index = items.indexOf(id);
            if (index > -1) {
                items.splice(index, 1);
            }
            $.cookie('cards', items.toString(), { expires: 7, path: '/' });

            $.ajax({
                success: function (response) {
                    if (response.error == true) {
                        toastr.error(response.message, "Error!");
                        return;
                    }
                    toastr.success("Successfully Deleted", response.message)
                    $(`tr[data-entity-id=${entityId}]`).remove();
                    showCardCount();
                    setTotalPrice();
                    checkCart();
                },
                error: function (response) {
                    toastr["error"]("Unsuccessfully", "Data has not been deleted")
                }
            })
        }
        function plusQuantity(e) {
            e.preventDefault();
            let row = $(e.currentTarget).closest('tr');

            let data = $(row).data();

            let quantity = $(row).find('span.quantity').html();
            if (!isNaN(quantity)) {
                quantity++;
                $(row).data('quantity', quantity);
            }
            $(row).find('span.quantity').html(quantity);
            $(row).find('td.product-price .amount').html(`${(data.price * quantity)}₼`)
            setTotalPrice();
            console.log(data);
        }
        function minusQuantity(e) {
            e.preventDefault();
            let row = $(e.currentTarget).closest('tr');

            let data = $(row).data();

            let quantity = $(row).find('span.quantity').html();
            if (quantity == 1) {
                return;
            }
            if (!isNaN(quantity)) {
                quantity--;
                $(row).data('quantity', quantity);
            }
            $(row).find('span.quantity').html(quantity);
            $(row).find('td.product-price .amount').html(`${(data.price * quantity)}₼`)
            setTotalPrice();
            console.log(data);
        }
    </script>
}


